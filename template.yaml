AWSTemplateFormatVersion: 2010-09-09

Description: Sample SAM Template for sam-app creating lambda with API call
# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31




# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
# Description: >
#   SAM-App-Lambda-Api

#   Sample SAM Template for sam-app creating lambda with API call

  ApiPollerStateMachineSimple:
    Type: AWS::Serverless::StateMachine
    Properties:
      # Type: EXPRESS
      Type: STANDARD
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchPayloadFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref PreparePayloadFunction
        - Statement:
          - Sid: CloudWatchLogsPolicy
            Effect: Allow
            Action:
            - "logs:CreateLogDelivery"
            - "logs:GetLogDelivery"
            - "logs:UpdateLogDelivery"
            - "logs:DeleteLogDelivery"
            - "logs:ListLogDeliveries"
            - "logs:PutResourcePolicy"
            - "logs:DescribeResourcePolicies"
            - "logs:DescribeLogGroup"
            - "logs:DescribeLogGroups"
            Resource: "*"



      Tracing:
        Enabled: true
      DefinitionUri: statemachine/fetch-data-state-machine.asl.yaml
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
        - CloudWatchLogsLogGroup:
            LogGroupArn: !GetAtt ApiPollerStateMachineLogGroup.Arn
      DefinitionSubstitutions:
        PreparePayloadFunction: !GetAtt PreparePayloadFunction.Arn
        FetchPayloadFunction: !GetAtt FetchPayloadFunction.Arn

  # PAYLOAD PROCESSOR STATE MACHINE LAMBDAS
  PreparePayloadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: prepare-payload.handler
      Runtime: nodejs14.x
      Tracing: Active
      Architectures:
        - x86_64

  FetchPayloadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: fetch-payload.handler
      Runtime: nodejs14.x
      Tracing: Active
      Architectures:
        - x86_64


  ApiPollerStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "ApiFetchStateMachineLogGroup-${AWS::StackName}"
      RetentionInDays: 7
